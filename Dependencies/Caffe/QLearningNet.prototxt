name: "QLearningNet"
layer {
	name: "data"
	type: "Data"
	data_param {
		source: "q_lrng_lmdb"
		backend: LMDB
		batch_size: 8
	}
	top: "data"
}

layer {
	name: "hiddenLayer1"
	type: "InnerProduct"
	# learning rate and decay multipliers for the weights
	param { lr_mult: 1 decay_mult: 1 }
	# learning rate and decay multipliers for the biases
	param { lr_mult: 2 decay_mult: 0 }
	inner_product_param {
		num_output: 1000
		weight_filler {
		  type: "gaussian"
		  std: 0.01
		}
		bias_filler {
		  type: "constant"
		  value: 0
		}
	}
	bottom: "data"
	top: "hiddenLayer1"
}

layer {
	name: "relu1"
	type: "ReLU"
	bottom: "hiddenLayer1"
	top: "outHidden1"
}

layer {
	name: "hiddenLayer2"
	type: "InnerProduct"
	# learning rate and decay multipliers for the weights
	param { lr_mult: 1 decay_mult: 1 }
	# learning rate and decay multipliers for the biases
	param { lr_mult: 2 decay_mult: 0 }
	inner_product_param {
		num_output: 1000
		weight_filler {
		  type: "gaussian"
		  std: 0.01
		}
		bias_filler {
		  type: "constant"
		  value: 0
		}
	}
	bottom: "outHidden1"
	top: "hiddenLayer2"
}

layer {
	name: "relu2"
	type: "ReLU"
	bottom: "hiddenLayer2"
	top: "outHidden2"
}

layer {
	name: "out"
	type: "InnerProduct"
	# learning rate and decay multipliers for the weights
	param { lr_mult: 1 decay_mult: 1 }
	# learning rate and decay multipliers for the biases
	param { lr_mult: 2 decay_mult: 0 }
	inner_product_param {
		num_output: 4
		weight_filler {
		  type: "gaussian"
		  std: 0.01
		}
		bias_filler {
		  type: "constant"
		  value: 0
		}
	}
	bottom: "outHidden2"
	top: "out"
}

